.TH PIPELINE 3 "06 November 2021"

.SH NAME

pipeline \- builds a pipeline of the star identification process

.SH SYNOPSIS

\fBpipeline\fP --png \fIfilepath\fP ((--focal-length \fIlength\fP --pixel-size \fIsize\fP) | --fov \fIdegrees\fP) [CENTROID OPTIONS...] [--centroid-mag-filter \fImin-mag\fP] [--database \fIfilename\fP] [STAR-ID OPTIONS...] [ATTITUDE DET OPTIONS...] [COMPARATORS...]
.br
\fBpipeline\fP --generate \fInum-images\fP [(--focal-length \fIlength\fP --pixel-size \fIsize\fP) | --fov \fIdegrees\fP] [GENERATE OPTIONS...] [CENTROID OPTIONS...] [--centroid-mag-filter \fImin-mag\fP] [--database \fIfilename\fP] [STAR-ID OPTIONS...] [ATTITUDE DET OPTIONS...] [COMPARATORS...]

.SH DESCRIPTION

\fBpipeline\fP is the command to set the different stages of the star identification pipeline. An
image can be taken in as input from \fIfilepath\fP, or image(s) can be procedurally generated. The pipeline has
the following stages:
.IP \[bu] 2
Centroiding: Determine star center positions.
.IP \[bu] 8
(Mini-stage after centroiding): Centroid magnitude filter: Remove centroids with too low of a magnitude.
.IP \[bu] 2
Star identification: Determine which star is which.
.IP \[bu] 2
Attitude determination: Use star identifiers to compute a best-fit orientation/attitude.
.LP

The command line specifies, mainly, three things: How input should be provided to the pipeline (from
an image file or randomly generated?), how the different stages of the pipeline should be executed
(which algorithms to use? What config options for those algorithms?), and what should be done with
the output of the pipeline (Visualize the star-id? Figure out what percentage of stars were
correctly identified?).

.SS Pipeline Input

Presently there are two ways to provide pipeline input:
.IP \[bu] 2
Image file on disk: Use the \fB--png\fP option to specify the file path to a png to read.
.IP \[bu] 2
Generated image: Use the \fB--generate\fP option to specify how many false images to generate.
.LP

For both input modes, you'll probably want to specify how "zoomed-in" the camera is; this can be
done by providing both the \fB--focal-length\fP and \fB--pixel-size\fP options, or just the
\fB--fov\fP option.

When \fB--generate\fP is used, LOST keeps track of what the "true" centroids, star identifiers, and
attitude are, since it has absolute knowledge of the generated image. These intermediate results can
be compared against pipeline outputs later to evaluate individual pipeline stages.

.SS Pipeline itself

Options can be specified to select algorithms and configuration for each pipeline stage. When using
a generated image, it is not necessary to specify every stage of the pipeline, because the generated
image contains enough information to run each pipeline stage individually. For example, if only the
attitude estimation algorithm is specified, the exact centroids and star identifiers that the image
generator created will be used as input.

.SS Pipeline Output (Comparators)

Finally, information about the pipeline run can be printed. LOST can:
.IP \[bu] 2
Plot images visualizing star identification (\fB--plot-input\fP, \fB--plot-output\fP, and \fB--plot-raw-input\fP).
.IP \[bu] 2
Print the raw output of each stage (\fB--print-actual-centroids\fP, \fB--print-expected-centroids\fP, \fB--print-attitude\fP).
.IP \[bu] 2
(Generated images only), compare the output of each stage with the expected output (\fB--compare-*\fP), making it easy to evaluate various algorithms for various parts of the pipeline.
.LP


.SH BASIC OPTIONS

.TP
\fB--png\fP \fIfilepath\fP
Identify the png image at the given \fIfilepath\fP.

.TP
\fB--focal-length\fP \fIlength\fP
The focal length of the camera that took the picture (in mm).

.TP
\fB--pixel-size\fP \fIsize\fP
The pixel size of the camera that took the picture (in micrometers).

.TP
\fB--fov\fP \fIdegrees\fP
The field of view of the camera that took the picture (in degrees). Defaults to 20 deg if option is not selected.

.SH MISC PIPELINE OPTIONS

.TP
\fB--centroid-mag-filter\fP \fImin-mag\fP
Will not consider centroids with magnitude below \fImin-mag\fP.

.TP
\fB--centroid-filter-brightest\fP \fInum-stars\fP
Remove all but the brightest \fInum-stars\fP many stars from the list of centroids before sending to
star-id. Often a better choice than \fB--centroid-mag-filter\fP, because you can ensure that you
keep enough stars to do star-id. If both this option and \fB--centroid-mag-filter\fP are provided,
then all stars satisfying both criteria are kept (intersection).

.TP
\fB--database\fP \fIfilename\fP
Chooses \fIfilename\fP as the database to use during star identification.

.TP
\fB--help\fI
Prints the contents of the manual entry for the command to the terminal.

.SH CENTROID OPTIONS

.TP
\fB--centroid-algo\fP \fIalgo\fP
Runs the \fIalgo\fP centroiding algorithm. Recognized options are: dummy (random centroid algorithm), cog (center of gravity), and iwcog (iterative weighted center of gravity).  Defaults to dummy if option is not selected.

.TP
\fB--centroid-dummy-stars\fP \fInum-stars\fP
Runs the dummy centroiding algorithm (random centroid algorithm) with \fInum-stars\fP stars centroided. Defaults to 5 if option is not selected.

.SH STAR IDENTIFICATION OPTIONS

.TP
\fB--star-id-algo\fP \fIalgo\fP
Runs the \fIalgo\fP star identification algorithm. Current options are "dummy", "gv", "tetra", and "pyramid". Defaults to "dummy" if option is not selected.

.TP
\fB--angular-tolerance\fP [\fItolerance\fP] Sets the estimated angular centroiding error tolerance,
used in some star id algorithms, to \fItolerance\fP degrees. Defaults to 0.04 degrees.

.TP
\fB--false-stars\fP \fInum\fP
\fInum\fP is the estimated number of false stars in the whole sphere for the pyramid scheme star identification algorithm. Defaults to 500 if option is not selected.

.TP
\fB--max-mismatch-prob\fP \fIprobability\fP
\fIprobability\fP is the maximum allowable probability of an incorrect star identification, for star id algorithms which support it. Defaults to 0.001.

.SH ATTITUDE DETERMINATION OPTIONS

.TP
\fB--attitude-algo\fP \fIalgo\fP
Runs the \fIalgo\fP algorithm for the attitude stage of the pipeline. Current options are "dqm" (Davenport Q), "triad", and "quest". Defaults to dqm.

.SH IMAGE GENERATION OPTIONS

.TP
\fB--generate\fP \fInum-images\fP
Generates \fInum-images\fP many images. Mutually exclusive with \fB--png\fP.

.TP
\fB--generate-x-resolution\fP \fIpixels\fP
Sets the horizontal resolution of the generated image(s) to \fIpixels\fP. Defaults to 1024.

.TP
\fB--generate-y-resolution\fP \fIpixels\fP
Sets the vertical resolution of the generated image(s) to \fIpixels\fP. Defaults to 1024.

.TP
\fB--generate-zero-mag-photons\fP \fInum-photoelectrons\fP
A star with magnitude 0 will cause \fInum-photoelectrons\fP many photoelectrons to be received by
the sensor per time unit. A default value of 20,000 is chosen. See Liebe's, "tutorial on star tracker accuracy" for theoretical information on how to calculate this.

.TP
\fB--generate-saturation-photons\fP \fIsaturation-photoelectrons\fP

When a pixel receives at least this many photoelectrons, it will appear completely white (at least before other noise is applied). Note that, because of noise, a pixel may still appear completely white if it receives less than \fIsaturation-photoelectrons\fP many photoelectrons.

.TP
\fB--generate-spread-stddev\fP \fIstddev\fP
Sets the standard deviation of the Gaussian distribution we use to approximate the distribution of photons received from each star. Defaults to 1.0.

.TP
\fB--generate-shot-noise\fP \fItrue|false\fP
Enables or disables shot noise simulation in generated images. Defaults to true.

.TP
\fB--generate-dark-current\fP \fInoise-level\fP
Set observed brightness of dark current in the image, from 0 (no dark noise) to 1 (whole image pure white). Defaults to 0.1. cf \fB--generate-sensitivity\fP to control shot noise intensity.

.TP
\fB--generate-read-noise-stddev\fP \fIstddev\fP
Sets the standard deviation of Gaussian noise in the generated image(s) to \fIstddev\fP. Noise is measured in observed brightness, where 1 is the difference between pure white and pure black. Defaults to 0.05.

.TP
\fB--generate-centroids-only\fP [\fIcentroids-only\fP]
If set (argument is not needed, but can be a bool), will not actually generate any pixel data -- only centroid positions. Much faster if only evaluating a star-id algorithm (eg sky coverage testing).

.TP
\fB--generate-ra\fP, \fB--generate-de\fP, \fB--generate-roll\fP \fIdegrees\fP
Set the right ascension, declination, and roll of the generated image.

.TP
\fB--generate-random-attitudes\fP [\fIenable\fP]
Generate a random attitude for each generated image. Ignores specified ra, de, and roll if set.

.TP
\fB--generate-exposure\fP \fIexposure-time\fP
Controls the exposure time of generated images. Default is 0.2. Affects both motion blur and number of photons received per star.

.TP
\fB--generate-blur-ra\fP, \fB--generate-blur-de\fP, \fB--generate-blur-roll\fP \fIdegrees\fP
Set the motion blur direction. By default, there is no motion blur (i.e., all of these are 0.0)

.TP
\fB--generate-readout-time\fP \fIreadout-time\fP
Rolling shutter readout time for generated images. This is the time it takes from starting to capture the first row until finishing capturing the last row. Defaults to 0 (rolling shutter simulation disabled).

.TP
\fB--generate-false-stars\fP \fInum-false-stars\fP
The number of false stars generated. All are placed uniformly randomly around the celestial sphere. Defaults to 0 (no false stars generated)

.TP
\fB--generate-false-min-mag\fP \fIminimum-magnitude\fP
The minimum (weakest) magnitude that generated false stars should have. Defaults to 8.0.

.TP
\fB--generate-false-max-mag\fP \fImaximum-magnitude\fP
The maximum (strongest) magnitude that generated false stars should have. Defaults to 1.0.

.TP
\fB--generate-perturb-centroids\fP \fIperturbation-stddev\fP
Introduce artificial centroiding error. If provided, all the input and expected centroids will be shifted randomly according to a 2D Gaussian distribution with the given standard deviation (defaults to 0.2 pixel stddev). For evaluating star-id performance vs centroid error.

.TP
\fB--generate-cutoff-mag\fP \fIhalf-chance-mag\fP
When evaluating star-id algos on generated images, we don't want every single catalog star in the FOV to be fed into the star-id algorithm. This option lets you control that! Every catalog star has some probability of being turned into an input centroid, and this specifies the magnitude that will have a 50% probability of being included in the input centroid list. An overly complicated mathematical function determines how that probability changes as you increase and decrease the magnitude from there, but it falls to 0 or 1 pretty quickly at either side.

Set to a value of 100 or greater to disable cutoff and include all centroids.

.TP
\fB--generate-oversampling\fP \fInum-samples\fP
Perform \fInum-samples\fP many samples per pixel when generating images. Effectively performs antialiasing. \fInum-samples\fP must be a perfect square. Default 4.

.TP
\fB--generate-seed\fP \fIseed\fP
An integer seed to pass to the random number generator used during image generation.

.SH COMPARATOR OPTIONS

The options that speak of an "expected" something will only work on generated images. In a generated
image, the "ideal" output of each stage is already known because we created the image to begin with!
For example, we know exactly where each centroid should be. So we have an "expected" output for each
stage we can conveniently compare against!

.TP
\fB--generate-time-based-seed\fP [\fIenable\fP]
If true (the default), uses the current timestamp as a random seed. \fB--generate-seed\fP is ignored if time based seed is set.

.TP
\fB--plot-raw-input\fP [\fIpath\fP]
Argument is optional. Plots raw BW input image to PNG. Prints to \fIpath\fP. Defaults to stdout.

.TP
\fB--plot-input\fP [\fIpath\fP]
Argument is optional. Plots annotated input image to PNG. Prints to \fIpath\fP. Defaults to stdout.

.TP
\fB--plot-expected\fP [\fIpath\fP]
Argument is optional. Plots annotated "expected" image to PNG. The difference between "expected" and
"input" is that "input" is what's passed to the actual algorithms, while "expected" is compared
against the actual output of the algorithms for evaluation purposes.


.TP
\fB--plot-output\fP [\fIpath\fP]
Argument is optional. Plot output to PNG. Prints to \fIpath\fP. Defaults to stdout.

.TP
\fB--plot-centroid-indices\fP [\fIpath\fP]
Mainly for debugging. Argument is optional. Plot output to PNG, but instead of labeling the stars
with the catalog star they were identified as, labels them with their centroid index.

If a centroid algo was provided, prints those indices. Otherwise, prints the "input centrtoid"
indices, which is whatever would be passed to the star-id algo (so for generated images, after
perturbations and magnitude cutoff is applied).

.TP
\fB--print-actual-centroids\fP [\fIpath\fP]
Argument is optional. Print list of centroids in the pipeline output to \fIpath\fP. If star
identification was also performed, print which catalog star each centroid was identified as. If
input is from a generated image, also print the expected id for each centroid (note that there can
sometimes be multiple acceptable star-ids for a star, if it's within the centroid comparison
threshold of multiple catalog stars. Usually setting --min-separation sufficiently high prevents
this). Defaults to stdout.

.TP
\fB--print-input-centroids\fP [\fIpath\fP]
Argument is optional. Print list of centroids in the pipeline input to \fIpath\fP. This only works
for generated images. Prints whatever centroids would normally be sent to the star-id algorithm if
provided in the pipeline. Also prints star-ids, but don't rely on them, because if the input
centroids were perturbed the generated star-id may not actually be the closest catalog star anymore!
Defaults to stdout.

.TP
\fB--print-expected-centroids\fP [\fIpath\fP]
Argument is optional. Print list of "expected" centroids from the pipeline input to \fIpath\fP. The
"expected" centroids are all centroids used to generate the real image, including false stars and
stars below the cutoff magnitude. Also prints out expected star identifications for those stars.
This only works for generated images. Generally you should use \fB--print-actual-centroids\fP
instead, and use \fB--compare-centroids\fP if you need to compare actual and expected centroids.

.TP
\fB--print-attitude\fP [\fIpath\fP]
Argument is optional. Print the determined right ascension, declination, and roll to \fIpath\fP. TODO: Option to print as quaternion. Defaults to stdout.

.TP
\fB--print-speed\fP [\fIpath\fP]
Print the average, min, max, and upper 95th percentile of how long each stage of the pipeline took to run.

.TP
\fB--compare-centroids\fP [\fIpath\fP]
Argument is option. Compare expected to actual centroids. Prints to \fIpath\fP. Defaults to stdout.

.TP
\fB--compare-stars\fP [\fIpath\fP]
Argument is optional. Compare expected to actual star identifiers. Prints to \fIpath\fP. Defaults to stdout. In the output, starid_num_correct, starid_num_incorrect, and starid_num_total count the number of individual stars identified in an image. The starid_num_images_correct and starid_num_images_incorrect outputs are more aggregated: starid_num_images_correct records the number of images where at least two stars were correctly id'd and no stars were incorrectly id'd, while starid_num_images_incorrect records the number of images with at least one incorrectly id'd star (used when generating more than 1 image at a time, eg for evaluation).

.TP
\fB--compare-attitudes\fP [\fIpath\fP]
Argument is optional. Compare expected to actual attitude. Prints to \fIpath\fP. Defaults to stdout.

.TP
\fB--centroid-compare-threshold\fP \fIthreshold\fP
Sets the threshold (in pixels) to consider two centroids equal (cf \fB--compare-centroids\fP).

.TP
\fB--attitude-compare-threshold\fP \fIthreshold\fP
Sets the threshold (in degrees) to consider two attitudes equal (cf \fB--compare-attitudes\fP).

.SH SEE ALSO
database(3)
